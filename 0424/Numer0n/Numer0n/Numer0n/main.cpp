//*****************************
//	基本ルール	ヌメロン
//	1 :
//	それぞれのプレイヤーが0〜9ま
//	での数字が書かれたカードのうち
//	3つを使って3ケタの番号を作成する。
//	ただし、「112」「121」といった同じ数字を
//	2つ以上使用した番号は作れない。
//
//	2:
//	先攻のプレイヤーは相手が作成したと思われる番号をコールする。
//	相手はコールされた番号と自分の番号を見比べ、
//	コールされた番号がどの程度合って いるかを発表する。
//	数字と位置が合っていた場合は「EAT」、
//	数字は合っているが位置は合っていない場合は「BITE」となる。
//	例として相手の番号が 「765」、
//	コールされた番号が「746」であった場合「1EAT-1BITE」となる。
//
//	3:
//	これを先攻・後攻が繰り返して行い、先に相手の番号を完全に当てきったプレイヤーの勝利となる。
//
//	$：
//	相手の数字は全て別の数字です
//
//******************************

#include<stdio.h>
#include<stdlib.h>
#include<time.h>

int main()
{
	int x, y, z;
	int a, b, c;
	int n, m;

	/* 3桁の乱数値を生成 */
	srand((unsigned int)time(NULL));

	/* 三桁の数字が別々になるように */
	x = rand() % 10;

	do
	{
		y = rand() % 10;
	}	while (y == x);		//<<もし一桁目と二桁目が同じ数字なら数字を決めなおす

	do
	{
		z = rand() % 10;
	}	while (z == x || z == y);

	for (;;)
	{
		//入力
		scanf_s("%3d", &n);
		//1桁目
		a = n / 100;
		//2桁目
		b = n % 100 / 10;
		//3桁目
		c = n % 10;

		//不正な数字ならはじく
		if (n < 12 || n > 987 || a == b || a == c || b == c)
		{
			continue;
		}

		/* イート(当たり)の数 */
		n = 0;
		if (a == x)
		{
			n++;
		}
		if (b == y)
		{
			n++;
		}
		if (c == z)
		{
			n++;
		}
		/* バイト(まぐれ)の数 */
		m = 0;
		if ((a == y) || (a == z))
		{
			m++;
		}
		if ((b == x) || (b == z))
		{
			m++;
		}
		if ((c == x) || (c == y))
		{
			m++;
		}

		/* 答え表示 */
		if (n != 3)
		{
			printf("イートは%d - バイトは%d\n", n, m);
		}
		else
		{
			puts("Hit!\n");
			break;
		}
	}

	while (1);
}